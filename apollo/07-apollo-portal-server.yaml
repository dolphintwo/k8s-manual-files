# Configmap 中配置要使用的环境，这里只用 DEV 与 PRO 两个环境
kind: ConfigMap
apiVersion: v1
metadata:
  name: configmap-apollo-portal-server
data:
  application-github.properties: |
    spring.datasource.url = jdbc:mysql://mysql.public:3306/ApolloPortalDB?characterEncoding=utf8
    spring.datasource.username = root
    spring.datasource.password = hashquark
  apollo-env.properties: |
    dev.meta=http://service-apollo-config-server-dev.public:8080
    pro.meta=http://service-apollo-config-server-prod.public:8080
---
kind: Service
apiVersion: v1
metadata:
  name: service-apollo-portal-server
  labels:
    app: service-apollo-portal-server
spec:
  ports:
  - protocol: TCP
    port: 8070
    targetPort: 8070
  selector:
    app: pod-apollo-portal-server
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ingress-apollo-portal-server
spec:
  rules:
  - http:
      paths:
      - path: /
        backend:
          serviceName: service-apollo-portal-server
          servicePort: 8070
    host: apollo.hashquark-dev.net
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: deployment-apollo-portal-server
  labels:
    app: deployment-apollo-portal-server
spec:
  replicas: 3
  selector:
    matchLabels:
      app: pod-apollo-portal-server
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: pod-apollo-portal-server
    spec:
      initContainers:
      # 测试 admin-service 服务是否能正常提供服务
      - image: harbor.hashquark-dev.net/public/alpine-bash:3.8
        name: check-service-apollo-admin-server-dev
        command: ['bash', '-c', "curl --connect-timeout 2 --max-time 5 --retry 60 --retry-delay 1 --retry-max-time 120 service-apollo-admin-server-dev.public:8090"]
      - image: harbor.hashquark-dev.net/public/alpine-bash:3.8
        name: check-service-apollo-admin-server-prod
        command: ['bash', '-c', "curl --connect-timeout 2 --max-time 5 --retry 60 --retry-delay 1 --retry-max-time 120 service-apollo-admin-server-prod.public:8090"]  
      containers:
      - image: harbor.hashquark-dev.net/public/apollo-portal-server:v1.4.0
        name: container-apollo-portal-server
        ports:
        - containerPort: 8070
        env:
        - name: APOLLO_PORTAL_SERVICE_NAME
          value: "service-apollo-portal-server.public"
        readinessProbe:
          tcpSocket:
            port: 8070
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          tcpSocket:
            port: 8070
          initialDelaySeconds: 120
          periodSeconds: 15
        volumeMounts:
        - name: volume-configmap-apollo-portal-server
          mountPath: /apollo-portal-server/config/application-github.properties
          subPath: application-github.properties
        - name: volume-configmap-apollo-portal-server
          mountPath: /apollo-portal-server/config/apollo-env.properties
          subPath: apollo-env.properties
      imagePullSecrets:
      - name: regsecret
      volumes:
      - name: volume-configmap-apollo-portal-server
        configMap:
          name: configmap-apollo-portal-server
          items:
          - key: application-github.properties
            path: application-github.properties
          - key: apollo-env.properties
            path: apollo-env.properties
